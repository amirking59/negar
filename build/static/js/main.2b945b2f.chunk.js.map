{"version":3,"sources":["components/CalendarListItem.js","components/CalendarList.js","components/Search.js","store/actions/filter.js","App.js","store/actions/calendar.js","components/page/AddPage.js","components/page/NotFoundPage.js","components/page/HeaderPage.js","components/page/EditPage.js","store/configStore.js","index.js"],"names":["CalendarListItem","props","dis","Math","floor","event","at","moment","startOf","valueOf","Link","to","id","title","connect","state","calendar","filter","startDateMatch","startDate","isSameOrBefore","endDateMatch","endDate","isSameOrAfter","text","toLowerCase","includes","trim","map","key","dispatch","setTextFilter","type","setStartDate","setEndDate","useState","focus","setFocus","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","numberOfMonths","isOutsideRange","onClick","e","placeholder","value","onChange","target","App","addEvent","note","v4","editEvent","changes","undefined","err","setErr","setText","setNote","date","setDate","onSubmit","preventDefault","history","push","autoFocus","onDateChange","focused","NotFoundPage","HeaderPage","find","match","params","removeEvent","calendarDefaultState","filterDefaultState","createStore","combineReducers","action","store","configStore","v","subscribe","console","log","getState","ReactDOM","render","BrowserRouter","Switch","Route","path","component","exact","AddPage","EditPage","document","getElementById"],"mappings":"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","file":"static/js/main.2b945b2f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const CalendarListItem = props => {\r\n    const dis = Math.floor((props.event.at - moment().startOf(\"day\").valueOf()) / (1000 * 60 * 60 * 24));\r\n    return (\r\n        <div>\r\n            <Link to={`/edit/${props.event.id}`}>{props.event.title}</Link>\r\n            <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n            <span>{dis < 0 ? -dis + \" days ago!\" : dis === 0 ? \"Today!\" : dis + \" days left!\"}</span>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport {CalendarListItem} from \"./CalendarListItem\";\r\n\r\n\r\nconst CalendarList = props => (\r\n    <div>\r\n        {\r\n            props.calendar\r\n                .filter((event) => {\r\n                    const startDateMatch = props.filter.startDate ? moment(event.at).isSameOrBefore(props.filter.startDate) : false;\r\n                    const endDateMatch = props.filter.endDate ? moment(event.at).isSameOrAfter(props.filter.endDate) : false;\r\n                    const text = event.title.toLowerCase().includes(props.filter.text.toLowerCase().trim());\r\n                    return !startDateMatch && !endDateMatch && text;\r\n                })\r\n                .map((event) => <CalendarListItem event={event} key={event.id}/>)\r\n        }\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    calendar: state.calendar,\r\n    filter: state.filter\r\n});\r\n\r\nexport default connect(mapStateToProps)(CalendarList)","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setTextFilter, setStartDate, setEndDate} from \"../store/actions/filter\";\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { DateRangePicker } from 'react-dates';\r\n\r\nconst Search = props => {\r\n    const [focus, setFocus] = useState(null);\r\n    return (\r\n        <div>\r\n            <DateRangePicker\r\n                startDateId=\"startDate\"\r\n                startDate={props.filter.startDate}\r\n                endDateId={\"endDate\"}\r\n                endDate={props.filter.endDate}\r\n                onDatesChange={({ startDate, endDate }) => {\r\n                    props.setStartDate(startDate);\r\n                    props.setEndDate(endDate);\r\n                }}\r\n                focusedInput={focus}\r\n                onFocusChange={(focusedInput) => {\r\n                    setFocus(focusedInput)\r\n                }}\r\n                numberOfMonths={1}\r\n                isOutsideRange={() => false}\r\n            />\r\n            <button onClick={(e) => {\r\n                props.setStartDate(null);\r\n                props.setEndDate(null);\r\n            }}>\r\n                clear\r\n            </button>\r\n            <input\r\n                type={\"text\"}\r\n                placeholder={\"search...\"}\r\n                value={props.filter.text}\r\n                onChange={(e) => {\r\n                    props.setTextFilter(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n   filter: state.filter\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setTextFilter: (text) => dispatch(setTextFilter(text)),\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","// FILTER ACTIONS\r\n\r\nexport const setTextFilter = text => ({\r\n    type: \"SET_TEXT_FILTER\",\r\n    text\r\n});\r\n\r\nexport const setStartDate = startDate => ({\r\n    type: \"SET_START_DATE\",\r\n    startDate\r\n});\r\n\r\nexport const setEndDate = endDate => ({\r\n    type: \"SET_END_DATE\",\r\n    endDate\r\n});","import React from 'react'\nimport CalendarList from \"./components/CalendarList\";\nimport Search from \"./components/Search\";\n\n\nfunction App() {\n    return (\n        <div>\n            <Search/>\n            <CalendarList/>\n        </div>\n    );\n}\n\nexport default App;\n","import {v4} from \"uuid\";\r\nimport moment from \"moment\";\r\n\r\n// CALENDAR ACTIONS\r\nexport const addEvent = ({title, note = \"\", at} = {}) => ({\r\n    type: \"ADD_EVENT\",\r\n    event: {\r\n        id: v4(),\r\n        title,\r\n        note,\r\n        at: moment(at).startOf('day').valueOf()\r\n    }\r\n});\r\n\r\nexport const removeEvent = (id) => ({\r\n    type: \"REMOVE_EVENT\",\r\n    id\r\n});\r\n\r\nexport const editEvent = (id, changes) => ({\r\n   type: \"EDIT_EVENT\",\r\n    id,\r\n   changes\r\n});","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport {SingleDatePicker} from \"react-dates\";\r\nimport moment from \"moment\";\r\nimport {addEvent} from \"../../store/actions/calendar\";\r\n\r\nconst AddPage = props => {\r\n    const [err, setErr] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    const [note, setNote] = useState(\"\");\r\n    const [focus, setFocus] = useState(false);\r\n    const [date, setDate] = useState(moment());\r\n    return (\r\n        <div>\r\n            <h1>Add new event</h1>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                if(!text) {\r\n                    setErr(\"please provide a title\");\r\n                } else {\r\n                    setErr(\"\");\r\n                    props.addEvent({\r\n                        title: text,\r\n                        at: date,\r\n                        note: note\r\n                    });\r\n                    props.history.push(\"/\")\r\n                }\r\n            }}>\r\n                <input\r\n                    value={text}\r\n                    onChange={(e) => {\r\n                        setText(e.target.value)\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder={\"title\"}\r\n                    autoFocus\r\n                />\r\n                <input\r\n                    value={note}\r\n                    onChange={(e) => {\r\n                        setNote(e.target.value)\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder={\"note(optional)\"}\r\n                    autoFocus\r\n                />\r\n                <SingleDatePicker\r\n                    id={\"date\"}\r\n                    date={date}\r\n                    onDateChange={(date) => {\r\n                        setDate(date);\r\n                    }}\r\n                    focused={focus}\r\n                    onFocusChange={({focused}) => {\r\n                        setFocus(focused)\r\n                    }}\r\n                    numberOfMonths={1}\r\n                />\r\n\r\n\r\n                <button>\r\n                    Add event\r\n                </button>\r\n            </form>\r\n            { err && <p>{err}</p>}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   addEvent: ({ title, at, note})  => dispatch(addEvent({ title, at, note}))\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(AddPage);","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst NotFoundPage = props => (\r\n    <div>\r\n        <h1>This page is not exist!!!</h1>\r\n    </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst HeaderPage = props => {\r\n    return (\r\n        <div>\r\n            <Link to={\"/\"}>\r\n                Home\r\n            </Link>\r\n            <Link to={\"/add\"}>\r\n                Add event\r\n            </Link>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HeaderPage;","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport {SingleDatePicker} from \"react-dates\";\r\nimport moment from \"moment\";\r\nimport {editEvent, removeEvent} from \"../../store/actions/calendar\";\r\n\r\n\r\nconst EditPage = props => {\r\n    const [text, setText] = useState(props.event.title);\r\n    const [note, setNote] = useState(props.event.note);\r\n    const [focus, setFocus] = useState(false);\r\n    const [date, setDate] = useState(moment(props.event.at));\r\n    return (\r\n        <div>\r\n            <h1>edit event</h1>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                if(text) {\r\n                    props.editEvent(props.match.params.id, {\r\n                        title: text,\r\n                        at: date,\r\n                        note: note\r\n                    });\r\n                    props.history.push(\"/\");\r\n                }\r\n            }}>\r\n                <input\r\n                    value={text}\r\n                    onChange={(e) => {\r\n                        setText(e.target.value)\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder={\"title\"}\r\n                    autoFocus\r\n                />\r\n                <input\r\n                    value={note}\r\n                    onChange={(e) => {\r\n                        setNote(e.target.value)\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder={\"note(optional)\"}\r\n                    autoFocus\r\n                />\r\n                <SingleDatePicker\r\n                    id={\"date\"}\r\n                    date={date}\r\n                    onDateChange={(date) => {\r\n                        setDate(date);\r\n                    }}\r\n                    focused={focus}\r\n                    onFocusChange={({focused}) => {\r\n                        setFocus(focused)\r\n                    }}\r\n                    numberOfMonths={1}\r\n                />\r\n                <button>\r\n                    Save changes!\r\n                </button>\r\n            </form>\r\n            <button onClick={(e) => {\r\n                props.removeEvent(props.event.id);\r\n                props.history.push(\"/\");\r\n            }}>\r\n                Remove event\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n   event: state.calendar.find((event) => event.id === props.match.params.id)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    editEvent: (id, {title, at, note}) => dispatch(editEvent(id,{title, at, note})),\r\n    removeEvent: (id) => dispatch(removeEvent(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPage);","import {combineReducers, createStore} from \"redux\";\r\nimport moment from \"moment\";\r\n\r\n// Calendar reducer\r\nconst calendarDefaultState = [];\r\nconst calendarReducer = (state = calendarDefaultState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_EVENT\":\r\n            return [\r\n                ...state,\r\n                action.event\r\n            ];\r\n        case \"REMOVE_EVENT\":\r\n            return state.filter((e) => e.id !== action.id);\r\n        case \"EDIT_EVENT\":\r\n            return state.map((e) => {\r\n                if(e.id === action.id) {\r\n                    return {\r\n                        ...e,\r\n                        ...action.changes\r\n                    };\r\n                } else {\r\n                    return e;\r\n                }\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Filter reducer\r\nconst filterDefaultState = {\r\n    text: \"\",\r\n    startDate: null,\r\n    endDate: null\r\n};\r\nconst filterReducer = (state = filterDefaultState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_TEXT_FILTER\":\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            };\r\n        case \"SET_START_DATE\":\r\n            return {\r\n                ...state,\r\n                startDate: action.startDate\r\n            };\r\n        case \"SET_END_DATE\":\r\n            return {\r\n                ...state,\r\n                endDate: action.endDate\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// root reducer\r\nexport default createStore(combineReducers({\r\n    calendar: calendarReducer,\r\n    filter: filterReducer\r\n    })\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport AddPage from \"./components/page/AddPage\";\nimport NotFoundPage from \"./components/page/NotFoundPage\";\nimport HeaderPage from \"./components/page/HeaderPage\";\nimport EditPage from \"./components/page/EditPage\";\n\n\nimport {addEvent, editEvent, removeEvent} from \"./store/actions/calendar\";\nimport {Provider} from \"react-redux\";\nimport configStore from \"./store/configStore\";\nimport moment from \"moment\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nconst store = configStore;\nconst v = addEvent({title: \"emtehan\", note: \"emtehan fizik\", at: moment(\"6/12/2020\").valueOf()});\nstore.dispatch(v);\nstore.dispatch(addEvent({title: \"emtehan\" , at: moment().valueOf()}));\nstore.dispatch(addEvent({title: \"emtehan\" , at: moment(\"6/25/2020\").valueOf()}));\nstore.dispatch(editEvent(v.event.id ,{ title: \"fuck u\"}));\n\nstore.subscribe(() => {\n    console.log(store.getState())\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <div>\n                <HeaderPage/>\n                <Switch>\n                    <Route path={\"/\"} component={App} exact/>\n                    <Route path={\"/Add\"} component={AddPage}/>\n                    <Route path={\"/edit/:id\"} component={EditPage}/>\n                    <Route component={NotFoundPage}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}